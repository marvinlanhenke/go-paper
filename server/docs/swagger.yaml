basePath: /v1
definitions:
  handler.CreatePaperPayload:
    properties:
      description:
        type: string
      title:
        maxLength: 255
        type: string
      url:
        maxLength: 255
        type: string
    required:
    - title
    - url
    type: object
  handler.UpdatePaperPayload:
    properties:
      description:
        type: string
      is_read:
        type: boolean
      title:
        maxLength: 255
        type: string
      url:
        maxLength: 255
        type: string
    type: object
  repository.Paper:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      is_read:
        type: boolean
      title:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: A simple API for managing your papers.
  title: Go Paper API
  version: 0.0.1
paths:
  /papers:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all papers stored in the system.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/repository.Paper'
            type: array
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get All Papers
      tags:
      - papers
    post:
      consumes:
      - application/json
      description: Create a new paper with the input payload
      parameters:
      - description: Create Paper
        in: body
        name: paper
        required: true
        schema:
          $ref: '#/definitions/handler.CreatePaperPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/repository.Paper'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a new paper
      tags:
      - papers
  /papers/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve the details of a paper using its unique ID.
      parameters:
      - description: Paper ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Paper'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get a Paper by ID
      tags:
      - papers
    patch:
      consumes:
      - application/json
      description: Update the details of a paper using its unique ID.
      parameters:
      - description: Paper ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Paper
        in: body
        name: paper
        required: true
        schema:
          $ref: '#/definitions/handler.UpdatePaperPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/repository.Paper'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update a Paper by ID
      tags:
      - papers
swagger: "2.0"
